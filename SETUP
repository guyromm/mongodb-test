#our shards internal ips:
#mongo1: 
10.181.238.238
#mongo2: 
10.181.239.133
#mongo3: 
10.181.236.72

#mongos coordinator listens on 10000
mongos --port 10000 --configdb 10.181.239.133:9999

#the following is done at mongos: mongo 10.181.239.133:10000/admin

var maxsize=1500;
//the rest of them:
var knodes = {"mongo29":"10.182.2.235",
"mongo26":"10.182.2.232",
"mongo19":"10.182.13.1",
"mongo20":"10.182.13.2",
"mongo27":"10.182.2.233",
"mongo22":"10.182.2.19",
"mongo12":"10.182.0.75",
"mongo23":"10.182.2.20",
"mongo10":"10.182.12.249",
"mongo28":"10.182.2.234",
"mongo24":"10.182.2.21",
"mongo30":"10.182.2.236",
"mongo7":"10.182.12.245",
"mongo5":"10.182.12.243",
"mongo6":"10.182.12.244",
"mongo25":"10.182.2.230",
"mongo15":"10.182.12.253",
"mongo4":"10.182.12.241",
"mongo21":"10.182.2.17",
"mongo1":"10.182.13.6",
"mongo14":"10.182.12.252",
"mongo16":"10.182.12.254",
"mongo2":"10.182.0.78",
"mongo11":"10.182.12.251",
"mongo3":"10.182.0.89",
"mongo9":"10.182.12.248",
"mongo13":"10.182.0.85",
"mongo17":"10.182.12.255",
"mongo18":"10.182.13.0"};

for (var nn in knodes)  db.runCommand({addshard:knodes[nn],maxSize:maxsize,name:nn});

db.runCommand({enablesharding:"test_database"});
var colname = 'sharded_30nodes';
db.runCommand({shardcollection:"test_database."+colname,key:{indexed_id:1}});

var l = '0123456790abcdef';var nn = 1; var cnt=0;
for (var x=0;x<l.length;x++) for(var y=0;y<l.length;y+=nn)  for (var z=0;z<l.length;z+=nn*3) db.runCommand({split:"test_database."+colname,middle:{indexed_id:l[x]+l[y]+l[z] } });

print(cnt);

#quickkk shard distribution :D
use config;
var d = db.shards.find({},{_id:1}).toArray();
var c = db.chunks.find().toArray();
var shid=0;
for (chid in c) {    if (shid>=d.length) shid=0;    print ("assigning shard "+d[shid]._id+" to chunk "+chid);    c[chid].shard = d[shid]._id;
    db.chunks.save(c[chid]);    shid++;	}
use admin;
	 #clean launch sequence:
	 rm -rf /var/lib/mongocfg /var/lib/mongodb ; mkdir /var/lib/mongocfg /var/lib/mongodb ; cd mongodb-test ; git pull ; screen -S master -c mongodb-test.screen

	 #run on a single instance
	 python test_controllers.py '/insert/100k/50?noindex=1&sleep=0&collection=mongo1_single&initialindex=1'

	 #run on a sharded cluster
	 python test_controllers.py '/insert/100k/50?noindex=1&sleep=0&collection=sharded_3nodes&initialindex=1'

	 #run 30m on a 10 node sharded cluster
	 python test_controllers.py '/insert/100k/300?noindex=1&sleep=0&collection=sharded_10nodes&initialindex=1'

	 #run 30m on a 10 node sharded cluster
	 python test_controllers.py '/insert/100k/300?noindex=1&sleep=0&collection=sharded_20nodes&initialindex=1'

	 #run 50m on a 30 node sharded cluster
	 python test_controllers.py '/insert/100k/500?noindex=1&sleep=0&collection=sharded_30nodes&initialindex=1'

