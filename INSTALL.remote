#fresh install

#xargs usage:
cat newmachines.txt | xargs -P0 -n1 -I{} ssh {} uname -a

#install packages
cat newmachines.txt | \
    xargs -P0 -n1 -I{} ssh {} "apt-get update ; \
    sudo apt-get install -y emacs23-nox git-core screen python-setuptools python-dev gcc libevent-dev telnet"

#check that we have github access
for H in `cat newmachines.txt ` ; do echo $H ; ssh $H "ssh git@github.com" ;  done
#simultaneous
cat newmachines.txt | xargs -P0 -n1 -I{} ssh {} ssh git@github.com

#fetch the git repo
cat newmachines.txt | \
    xargs -P0 -n1 -I{} ssh {} 'cd ~/ ; \
    git clone git@github.com:guyromm/mongodb-test.git ; \
    git config --global user.name "Guy Romm" ; \
    git config --global user.email guyromm@gmail.com'

cat newmachines.txt | xargs -P0 -n1 -I{} ssh {} 'cd ~/mongodb-test ; git submodule update --recursive --init'

cat newmachines.txt | \
    xargs -P0 -n1 -I{} ssh {} 'easy_install gevent gevent-websocket websocket WebOb redis routes mako pymongo'

cat newmachines.txt | \
    xargs -P0 -n1 -I{} ssh {} "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10 ; \
    echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' >> /etc/apt/sources.list"

cat newmachines.txt | xargs -P0 -n1 -I{} ssh {} "apt-get update ; apt-get install mongodb-10gen"

#fetch secondary interfaces
cat newmachines.txt | xargs -P0 -n1 -I{} ssh {} "ifconfig eth1 | grep 'inet addr' | cut -d: -f2 | cut -f1 -d' '"

#install known hosts (for github) on all machines
for ITEM in `cat newmachines.txt` ; do echo $ITEM ; scp known_hosts $ITEM:~/.ssh/ ; done


#routine & maintenance

#pull latest ver
cat machines.txt | xargs -P0 -n1 -I{} ssh {} 'cd ~/mongodb-test ; git pull'

#check which screens are running
cat machines.txt | xargs -P0 -n1 -I{} ssh {} 'ps aux | grep screen | grep -v "grep screen" | wc'

#killall mongod and mongos
cat machines.txt | xargs -P0 -n1 -I{} ssh {} 'killall5 -9 mongod mongos'

#recreate confs
cat machines.txt |\
     xargs -P0 -n1 -I{} ssh {} 'rm -rf /var/lib/mongocfg /var/lib/mongodb ; mkdir /var/lib/mongocfg /var/lib/mongodb'

#killall screens
cat machines.txt | xargs -P0 -n1 -I{} ssh {} 'killall5 screen'

#remove dead screens
cat machines.txt  | xargs -P0 -n1 -I{} ssh {} 'screen -wipe'
 
#have a look at loads
cat machines.txt | xargs -P0 -n1 -I{} ssh {} 'uptime'

#init slave mongo sessions
cat machines.txt | xargs -P0 -n1 -I{} ssh {} 'screen -S slave -d -m -c ~/mongodb-test/mongodb-test.slave.screen'


#init master mongo sessions
cat masters.txt  | xargs -P0 -n1 -I{} ssh {} 'screen -S master -d -m -c ~/mongodb-test/mongodb-test.master.screen'


#see if mongo is running
cat machines.txt | xargs -P0 -n1 -I{} ssh {} 'ps aux | grep "mongod(.*)-f" | grep -v "grep mongod" | wc'
#if screen is running
cat machines.txt | xargs -P0 -n1 -I{} ssh {} 'ps aux | grep "screen" | grep -v "grep screen" | wc'

#build more servers
cloudservers --user guyromm --apikey <apikey> boot   --image 69  --key ~/.ssh/authorized_keys2 <machine>

#remove a db in all mongos
cat machines.txt | xargs -P0 -n1 -I{} ssh {} "echo 'db.dropDatabase()' | mongo localhost:27017/test_database"

#amount of records in mongod test collections
cat machines.txt | \
    xargs -P0 -n1 -I{} ssh {} 'mongo --eval "db.sharded_20nodes.count()" --quiet localhost:27017/test_database'

